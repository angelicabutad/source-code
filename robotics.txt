#include <Arduino.h>
#include "driver/ledc.h"  // Required for ESP32 LEDC PWM

#define ENA  5   // PWM for Motor A speed
#define IN1  18  // Motor A forward
#define IN2  19  // Motor A backward

#define ENB  4   // PWM for Motor B speed
#define IN3  21  // Motor B forward
#define IN4  22  // Motor B backward

#define PWM_FREQ 5000  // Set higher to reduce beeping (5kHz+)
#define PWM_RESOLUTION 8  // 8-bit resolution (0-255)

#define LED_PIN 2   // D2 LED on ESP32

void setup() {
    pinMode(IN1, OUTPUT);
    pinMode(IN2, OUTPUT);
    pinMode(IN3, OUTPUT);
    pinMode(IN4, OUTPUT);
    pinMode(LED_PIN, OUTPUT);

    digitalWrite(IN1, LOW);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, LOW);

    // NEW LEDC FUNCTION (ESP32 3.x+)
    ledcAttach(ENA, PWM_FREQ, PWM_RESOLUTION);
    ledcAttach(ENB, PWM_FREQ, PWM_RESOLUTION);
}

void loop() {
    // Blink LED (D2) to show the code is running
    digitalWrite(LED_PIN, HIGH);
    delay(500);
    digitalWrite(LED_PIN, LOW);
    delay(500);

    // Move Forward
    ledcWrite(ENA, 199);  // Set PWM duty cycle (0-255)
    ledcWrite(ENB, 199);
    digitalWrite(IN1, HIGH);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, HIGH);
    digitalWrite(IN4, LOW);
    delay(1000);

    // Blink LED (D2) to show the code is running
    digitalWrite(LED_PIN, HIGH);
    delay(250);

    // Stop
    ledcWrite(ENA, 0);
    ledcWrite(ENB, 0);
    delay(1000);

    // Blink LED (D2) to show the code is running
    digitalWrite(LED_PIN, LOW);
    delay(125);
    digitalWrite(LED_PIN, HIGH);
    delay(125);
    digitalWrite(LED_PIN, LOW);
    delay(125);

    // Turn Left (right wheel moves)
    ledcWrite(ENA, 199);
    ledcWrite(ENB, 199);
    digitalWrite(IN1, HIGH);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, LOW);
    delay(500);

    // Blink LED (D2) to show the code is running
    digitalWrite(LED_PIN, HIGH);
    delay(250);

    // Stop
    ledcWrite(ENA, 0);
    ledcWrite(ENB, 0);
    delay(1000);

    // Blink LED (D2) to show the code is running
    digitalWrite(LED_PIN, LOW);
    delay(125);
    digitalWrite(LED_PIN, HIGH);
    delay(125);
    digitalWrite(LED_PIN, LOW);
    delay(125);

    // Turn Left (right wheel moves)
    ledcWrite(ENA, 199);
    ledcWrite(ENB, 199);
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, HIGH);
    digitalWrite(IN4, LOW);
    delay(500);

    // Blink LED (D2) to show the code is running
    digitalWrite(LED_PIN, HIGH);
    delay(250);

    // Stop
    ledcWrite(ENA, 0);
    ledcWrite(ENB, 0);
    delay(1000);

    // Blink LED (D2) to show the code is running
    digitalWrite(LED_PIN, LOW);
    delay(250);

     // Move Backwards
    ledcWrite(ENA, 199);  // Set PWM duty cycle (0-255)
    ledcWrite(ENB, 199);
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, HIGH);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, HIGH);
    delay(1000);

    // Blink LED (D2) to show the code is running
    digitalWrite(LED_PIN, HIGH);
    delay(250);

    // Stop
    ledcWrite(ENA, 0);
    ledcWrite(ENB, 0);
    delay(1000);

}